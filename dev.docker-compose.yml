version: "3.7"

services:
  web-app:
    image: $APP_NAME:latest
    build:
      context: .
      dockerfile: ./dev.Dockerfile
    ports:
      - $APP_EXPOSED_PORT:$APP_PORT
    hostname: web-app
    restart: always
    container_name: ${APP_NAME}
    env_file:
      - ./.env
      - ./.env.mongo
    volumes:
      - type: bind
        target: /usr/src/app
        source: .
        volume:
          nocopy: true
    networks:
      - rabi-network
    environment:
      - MONGODB_HOST=mongo

  mongo:
    image: bitnami/mongodb:4.4-debian-10
    container_name: rabi-database
    hostname: mongo
    restart: always
    env_file:
      - ./.env.mongo
    ports:
      - 27018:27017
    volumes:
      - ticketing-mongo-volume:/bitnami/mongodb
    networks:
      - rabi-network

  elasticsearch:
    hostname: elasticsearch
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - rabi-network

  logstash:
    hostname: logstash
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000/tcp"
      - "5044:5044/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - rabi-network
    depends_on:
      - elasticsearch

  kibana:
    hostname: kibana
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - rabi-network
    depends_on:
      - elasticsearch

  filebeat:
    image: docker-logs-elk/filebeat:1.0.0
    build:
      context: filebeat/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      # needed to access all docker logs (read only) :
      - "/var/lib/docker/containers:/usr/share/dockerlogs/data:ro"
      # needed to access additional informations about containers
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - elasticsearch
      - logstash
    networks:
      - rabi-network

volumes:
  ticketing-mongo-volume:
  elasticsearch:

networks:
  rabi-network:
    driver: bridge
